from aiogram import Router, F
from aiogram.types import CallbackQuery, Message
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from aiogram.filters import StateFilter

from database.database import Database
from database.models import ChatSettings
from keyboards.inline import get_bot_settings_keyboard, get_main_settings_keyboard

router = Router()


class AdminSettingsStates(StatesGroup):
    """–°–æ—Å—Ç–æ—è–Ω–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤"""
    waiting_for_admin_id = State()
    waiting_for_confirm_remove = State()


@router.callback_query(F.data == "bot_settings")
async def bot_settings(callback: CallbackQuery, is_admin: bool):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –±–æ—Ç–∞"""
    if not is_admin:
        await callback.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.", show_alert=True)
        return
    
    await callback.message.edit_text(
        "‚öôÔ∏è –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ –¥–ª—è —ç—Ç–æ–≥–æ —á–∞—Ç–∞",
        reply_markup=get_bot_settings_keyboard()
    )
    await callback.answer()


@router.callback_query(F.data == "toggle_bot")
async def toggle_bot(callback: CallbackQuery, db: Database, is_admin: bool, chat_settings: ChatSettings = None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–∫–ª—é—á–µ–Ω–∏—è/–≤—ã–∫–ª—é—á–µ–Ω–∏—è –±–æ—Ç–∞ –≤ —á–∞—Ç–µ"""
    if not is_admin:
        await callback.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.", show_alert=True)
        return
    
    if not chat_settings:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞", show_alert=True)
        return
    
    chat_settings.is_enabled = not chat_settings.is_enabled
    await db.save_chat_settings(chat_settings)
    
    status = "–≤–∫–ª—é—á–µ–Ω" if chat_settings.is_enabled else "–≤—ã–∫–ª—é—á–µ–Ω"
    
    await callback.answer(f"‚úÖ –ë–æ—Ç {status} –≤ —ç—Ç–æ–º —á–∞—Ç–µ", show_alert=True)
    await bot_settings(callback, is_admin=True)


@router.callback_query(F.data == "manage_admins")
async def manage_admins(callback: CallbackQuery, is_admin: bool, chat_settings: ChatSettings = None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏"""
    if not is_admin:
        await callback.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.", show_alert=True)
        return
    
    if not chat_settings or not chat_settings.admin_ids:
        admin_list = "–°–ø–∏—Å–æ–∫ –ø—É—Å—Ç"
    else:
        admin_list = "\n".join([f"‚Ä¢ {admin_id}" for admin_id in chat_settings.admin_ids])
    
    message_text = (
        "üë• –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏ –±–æ—Ç–∞\n\n"
        f"–¢–µ–∫—É—â–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—ã –±–æ—Ç–∞:\n{admin_list}\n\n"
        "–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ ID.\n"
        "–î–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –µ–≥–æ ID —Å –º–∏–Ω—É—Å–æ–º –≤–ø–µ—Ä–µ–¥–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, -12345678).\n\n"
        "–ß—Ç–æ–±—ã –æ—Ç–º–µ–Ω–∏—Ç—å, –Ω–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É '–ù–∞–∑–∞–¥'."
    )
    
    keyboard = get_bot_settings_keyboard()
    
    await callback.message.edit_text(message_text, reply_markup=keyboard)
    await callback.answer()


@router.callback_query(F.data.startswith("admin:"))
async def admin_action(callback: CallbackQuery, db: Database, is_admin: bool, chat_settings: ChatSettings = None):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–µ–π—Å—Ç–≤–∏–π —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º–∏"""
    if not is_admin:
        await callback.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —ç—Ç–∏—Ö –Ω–∞—Å—Ç—Ä–æ–µ–∫.", show_alert=True)
        return
    
    action, admin_id = callback.data.split(":", 1)
    admin_id = int(admin_id)
    
    if not chat_settings:
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫ —á–∞—Ç–∞", show_alert=True)
        return
    
    if action == "remove_admin":
        if admin_id in chat_settings.admin_ids:
            chat_settings.admin_ids.remove(admin_id)
            await db.save_chat_settings(chat_settings)
            await callback.answer("‚úÖ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä —É–¥–∞–ª–µ–Ω", show_alert=True)
        else:
            await callback.answer("‚ùå –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω", show_alert=True)
    
    await manage_admins(callback, is_admin=True, chat_settings=chat_settings) 